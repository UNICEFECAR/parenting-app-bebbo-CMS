diff --git a/docroot/modules/contrib/mobile_app_links/src/Controller/WellKnownController.php b/docroot/modules/contrib/mobile_app_links/src/Controller/WellKnownController.php
index fa8648ce..bf80f30d 100644
--- a/docroot/modules/contrib/mobile_app_links/src/Controller/WellKnownController.php
+++ b/docroot/modules/contrib/mobile_app_links/src/Controller/WellKnownController.php
@@ -34,19 +34,15 @@ public function assetLinks() {
     if (empty($package_name)) {
       throw new CacheableNotFoundHttpException($cacheMeta);
     }
-
-    $body = [
-      'relation' => [
-        'delegate_permission/common.handle_all_urls',
-      ],
-      'target' => [
-        'namespace' => 'android_app',
-        'package_name' => $package_name,
-        'sha256_cert_fingerprints' => explode(PHP_EOL, $config->get('sha256_cert_fingerprints')),
-      ],
+
+       $target = ['namespace'=>'android_app','package_name'=>$package_name,'sha256_cert_fingerprints'=>explode(PHP_EOL, $config->get('sha256_cert_fingerprints')),];
+       $relation = ['delegate_permission/common.handle_all_urls'];
+    $body[] = [
+      'relation'=>$relation,
+      'target'=>$target,
     ];

-    $response = new CacheableJsonResponse(json_encode($body, JSON_PRETTY_PRINT|JSON_UNESCAPED_SLASHES), 200, [], TRUE);
+    $response = new CacheableJsonResponse(json_encode($body, JSON_PRETTY_PRINT | JSON_UNESCAPED_SLASHES), 200, [], TRUE);
     $response->addCacheableDependency($cacheMeta);
     return $response;
   }
@@ -112,20 +108,40 @@ public function appleAppSiteAssociation() {
     $cacheMeta = new CacheableMetadata();
     $cacheMeta->addCacheTags($config->getCacheTags());

-    $appID = $config->get('appID');
+       $appID = $config->get('appID');
     if (empty($appID)) {
       throw new CacheableNotFoundHttpException($cacheMeta);
     }
-
+
+       /* UAT app config details */
+       $appID_Test = $config->get('appID_Test');
+       if(!empty($appID_Test)){
+               $app_test_path = explode(PHP_EOL, $config->get('paths_Test'));
+               $prod_details[] =  [
+            'appID' => $appID_Test,
+                       'components' => [ [
+                               '/' => $app_test_path[0],
+                               'comment' => "Matches any URL whose path starts with URL_PATH and instructs the system not to open it as a universal link"
+                       ]],
+            'paths' => explode(PHP_EOL, $config->get('paths_Test'))
+          ];
+       }
+
+       /* Prod app config details */
+       $component_path = explode(PHP_EOL, $config->get('paths'));
+       $prod_details[] = [
+            'appID' => $appID,
+                       'components' => [ [
+                               '/' => $component_path[0],
+                               'comment' => "Matches any URL whose path starts with URL_PATH and instructs the system not to open it as a universal link"
+                       ]],
+            'paths' => explode(PHP_EOL, $config->get('paths'))
+    ];
+
     $body = [
       'applinks' => [
         'apps' => [],
-        'details' => [
-          [
-            'appID' => $appID,
-            'paths' => explode(PHP_EOL, $config->get('paths')),
-          ],
-        ],
+        'details' => $prod_details,
       ],
     ];

@@ -138,7 +154,7 @@ public function appleAppSiteAssociation() {
       ];
     }

-    $response = new CacheableJsonResponse(json_encode($body, JSON_PRETTY_PRINT), 200, [], TRUE);
+    $response = new CacheableJsonResponse(json_encode($body, JSON_PRETTY_PRINT | JSON_UNESCAPED_SLASHES), 200, [], TRUE);
     $response->addCacheableDependency($cacheMeta);
     return $response;
   }
