<?php

/**
 * @file
 * It contains custom field module.
 */

use Drupal\group\Entity\Group;
use Drupal\field\Entity\FieldStorageConfig;
use Drupal\Core\Entity\FieldableEntityInterface;
use Drupal\Core\Entity\ContentEntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Field\FieldStorageDefinitionInterface;
use Drupal\language\Entity\ConfigurableLanguage;
use Drupal\languagefield\Entity;
use Drupal\Core\Language\LanguageInterface;
use Drupal\Core\TypedData\OptionsProviderInterface;
use Drupal\Core\Language\LanguageManager;





/* 
 * Group Module - Country Type
 * Language Field - Multiselect Option Customization 
 */
function pb_custom_field_allowed_values_function(FieldStorageConfig $definition, ContentEntityInterface $entity = NULL, $cacheable) {
 $standard_languages = \Drupal::languageManager()->getLanguages();
 $options = [];
 foreach($standard_languages as $lkey=>$lval)
 {
    $options[$lkey] = t($lval->getName());
 }
  return $options;
}


/*
 * Group Content List Page 
 * Country Field - dropdown option
 */

function pb_custom_field_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
if($form['#id'] == "views-exposed-form-content-listing-page-3")
  {
    $gids = \Drupal::entityQuery('group')->condition('type','country')->execute();
    $groups = \Drupal\group\Entity\Group::loadMultiple($gids);
    $options = ['' => 'All'];

    foreach($groups as $gid => $group) {
      $value = $group->get('label')->getString();
      $id = $group->get('id')->getString();

      if (isset($value)) {
        $options[strtolower($value)] = $value;
      }
    }
    if (isset($form['gtitle'])) {
      $form['gtitle']['#type'] = 'select';
      $form['gtitle']['#options'] = $options;
      $form['gtitle']['#size'] = 1;
    }
  }
  /* group membership form - alter the roles checkbox */
  /*if($form['#id'] == "group-content-country-group-membership-add-form" || $form['#id'] == "group-content-country-group-membership-edit-form")
  {
    $role_options = $form['group_roles']['widget']['#options'];
    $options = [];
    foreach($role_options as $key=>$val)
    {
      if($key != "country-admin")
      {
        /* if($key == "country-senior_editor")
            $val = $val." ( Country Admin )"; */

        /*$options[$key] = $val;
      }
    }
    $form['group_roles']['widget']['#options'] = $options;
  }*/
  $route_match = \Drupal::routeMatch();
  if($route_match->getRouteName() == "node.add" || $route_match->getRouteName() == "entity.node.edit_form")
  {
      /* Get the logged in user details */
      $currentAccount = \Drupal::currentUser();
      $cur_user_roles = $currentAccount->getRoles();
      $authorized_roles = array('se','sme','editor');
      /* Check the user roles */
      if (count(array_intersect($cur_user_roles, $authorized_roles)) != 0) {
     
        /* get the content type details */
        $node = $form_state->getFormObject()->getEntity();
        $content_type_arr = array('article');
        /* get the group details based on logged in user id */
        $grp_membership_service = \Drupal::service('group.membership_loader');
        $grps = $grp_membership_service->loadByUser($currentAccount);
        foreach ($grps as $grp) {
          $groups = $grp->getGroup();
        } 
        $languages = $groups->get('field_language')->getString();
        $language_arr = explode(",",$languages);
        $language_arr = array_map('trim', explode(',', $languages));
        $language_options = [];
        foreach (\Drupal::languageManager()->getLanguages(LanguageInterface::STATE_CONFIGURABLE) as $langcode => $language) {
          if(in_array($langcode,$language_arr)){
            $language_options[$langcode] = $language->getName();
          }
        }
        $form['langcode']['widget'][0]['value']['#options'] = $language_options;
      
    }
       
      
  }


}




