<?php

/**
 * @file
 * It contains custom field module.
 */

use Drupal\group\Entity\Group;
use Drupal\field\Entity\FieldStorageConfig;
use Drupal\Core\Entity\FieldableEntityInterface;
use Drupal\Core\Entity\ContentEntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Field\FieldStorageDefinitionInterface;
use Drupal\language\Entity\ConfigurableLanguage;
use Drupal\languagefield\Entity;
use Drupal\Core\Language\LanguageInterface;
use Drupal\Core\TypedData\OptionsProviderInterface;
use Drupal\Core\Language\LanguageManager;
use Drupal\Core\Url;
use Drupal\Core\Entity\EntityInterface;


/* 
 * Group Module - Country Type
 * Language Field - Multiselect Option Customization 
 */
function pb_custom_field_allowed_values_function(FieldStorageConfig $definition, ContentEntityInterface $entity = NULL, $cacheable) {
 $standard_languages = \Drupal::languageManager()->getLanguages();
 $options = [];
 foreach($standard_languages as $lkey=>$lval)
 {
    $options[$lkey] = t($lval->getName());
 }
  return $options;
}

function pb_custom_field_preprocess_page(&$variables) {
   $variables['#attached']['library'][] = 'pb_custom_field/mylib';
}

/*
 * Group Content List Page 
 * Country Field - dropdown option
 */
function pb_custom_field_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
  if($form['#id'] == "views-exposed-form-content-listing-page-1" || $form['#id'] == "views-exposed-form-country-content-listing-page-5")  
  {  
    $groups = Group::loadMultiple(); 
    $roles = \Drupal::currentUser()->getRoles();
    if(in_array('reviewer', $roles)) { 
      $gids = \Drupal::entityQuery('group')->condition('type','country')->execute();
      $groups = \Drupal\group\Entity\Group::loadMultiple($gids);
    }
    $options = ['' => 'All'];

    foreach($groups as $gid => $group) {
      $value = $group->get('label')->getString();
      $id = $group->get('id')->getString();

      if (isset($value)) {
        $options[$id] = $value;
      }
    }
    if (isset($form['gtitle'])) {
      $form['gtitle']['#type'] = 'select';
      $form['gtitle']['#options'] = $options;
      $form['gtitle']['#size'] = 1;
    }
  }
  
  if($form['#id'] == "group-content-country-group-membership-add-form"){  
    $form['group_roles']['widget']['#required'] = TRUE;  
    $roles = \Drupal::currentUser()->getRoles();
    if(!in_array('administrator', $roles)) {    
      $form['#validate'][] = 'group_user_validate';       
      $form['actions']['submit']['#submit'][] = 'user_update_function';        
    }
    if(in_array("reviewer", $roles) ){        
      $uid = \Drupal::request()->query->get('uid');
      if(!empty($uid)) { 
        $user = \Drupal\user\Entity\User::load($uid);
        $form['entity_id']['widget'][0]['target_id']['#default_value'] = $user;      
      }
    }
  }

  if($form['#id'] == "group-content-country-group-membership-edit-form"){ 
    $form['group_roles']['widget']['#required'] = TRUE;  
    $roles = \Drupal::currentUser()->getRoles();
    if(!in_array('administrator', $roles)) {           
      $form['actions']['submit']['#submit'][] = 'user_update_function';        
    }
  }
  

  if($form_id == "user_register_form") {     
    $roles = \Drupal::currentUser()->getRoles();
    if(in_array("reviewer", $roles) ){       
    $form['actions']['submit']['#submit'][] = "redirect_to_add_member_page";
    }
  }
  

  if($form['#id'] == "views-exposed-form-country-content-listing-page-5")
  {
    $user = \Drupal::currentUser();
    $user_roles = $user->getRoles();
    $uid = $user->id();
    $groups = array();
    $grp_membership_service = \Drupal::service('group.membership_loader');
    $grps = $grp_membership_service->loadByUser($user);
    foreach ($grps as $grp) {
            $groups[] = $grp->getGroup();
    }
    if(!empty($groups) && $groups[0]->bundle() == "country" && in_array('reviewer', $user_roles)) {           
      
      $gid = $groups[0]->id();
      $query = db_select('group__field_language')
      ->condition('entity_id', $gid)
      ->fields('group__field_language');
      $result = $query->execute()->fetchAll();

      $language_arr = [];
      for($i = 0; $i < count($result); $i++)
      {              
          $language_arr[] = $result[$i]->field_language_value;        
      }      
      $language_options = [];
      //$language_options = ['' => ''];
      foreach (\Drupal::languageManager()->getLanguages(LanguageInterface::STATE_CONFIGURABLE) as $langcode => $language) {
        $language_name = $language->getName();
        if(in_array($langcode,$language_arr)){
          $language_options[$langcode] = $language->getName();
        }
      }      
      if (isset($form['langcode'])) {
        $form['langcode']['#type'] = 'select';
        $form['langcode']['#options'] = $language_options;
      }
    }      

  }

  /* Check the current url is related node add or edit */
  $route_match = \Drupal::routeMatch();
  if($route_match->getRouteName() == "node.add" || $route_match->getRouteName() == "entity.node.edit_form" || $route_match->getRouteName() == "entity.group_content.create_form")
  {
    $request = \Drupal::request();
    $is_ajax = $request->isXmlHttpRequest();
    if(!$is_ajax) {
      /* Get the logged in user details */
      $currentAccount = \Drupal::currentUser();
      $cur_user_roles = $currentAccount->getRoles();
      $authorized_roles = array('se','sme','editor','reviewer');
      /* Check the user roles */
      if (count(array_intersect($cur_user_roles, $authorized_roles)) != 0) 
      {
      
          /* get the content type details */
          $node = $form_state->getFormObject()->getEntity();
          //$node->getType();
          $content_type_arr = array('article');
          /* get the group details based on logged in user id */
          $grp_membership_service = \Drupal::service('group.membership_loader');
          $grps = $grp_membership_service->loadByUser($currentAccount);
              if(!empty($grps))
              {
                foreach ($grps as $grp) {
                  $groups = $grp->getGroup();
                } 
                $languages = $groups->get('field_language')->getString();
                $language_arr = explode(",",$languages);
                $language_arr = array_map('trim', explode(',', $languages));
                $language_options = [];
                foreach (\Drupal::languageManager()->getLanguages(LanguageInterface::STATE_CONFIGURABLE) as $langcode => $language) {
                  if(in_array($langcode,$language_arr)){
                    $language_options[$langcode] = $language->getName();
                  }
                }
                $form['langcode']['widget'][0]['value']['#options'] = $language_options;
              }
        }
      }
    }
}

function pb_custom_field_link_alter(&$variables) {
    $user = \Drupal::currentUser();
    $user_roles = $user->getRoles();
    $uid = $user->id();
    $groups = array();
    $grp_membership_service = \Drupal::service('group.membership_loader');
    $grps = $grp_membership_service->loadByUser($user);
    foreach ($grps as $grp) {
            $groups[] = $grp->getGroup();
    }

    if(!empty($groups) && $groups[0]->bundle() == "country" && !in_array('administrator', $user_roles) && !in_array('global_admin', $user_roles)) {           
      $group_url = 'internal:/group/'.$groups[0]->id().'/members';
      $addcontent_url = 'internal:/group/'.$groups[0]->id() .'/node/create';
      
      if($group_url){
        $menu_link_parents = \Drupal::entityTypeManager()
          ->getStorage('menu_link_content')
          ->loadByProperties([
            'title' => 'Assign Users',
            'menu_name' => 'editorial-menu',
          ]);
        $entity = reset($menu_link_parents);
        if ($entity) {     
          $entity->set('link', $group_url);
          $entity->save();         
        }
        $menu_link_parents = \Drupal::entityTypeManager()
          ->getStorage('menu_link_content')
          ->loadByProperties([
            'title' => 'Group Users',
            'menu_name' => 'editorial-menu',
          ]);
        $entity = reset($menu_link_parents);
        if ($entity) {     
          $entity->set('link', $group_url);
          $entity->save();         
        }
      }
            
      if($addcontent_url){
        $menu_link_parents = \Drupal::entityTypeManager()
          ->getStorage('menu_link_content')
          ->loadByProperties([
            'title' => 'Add Content',
            'menu_name' => 'editorial-menu',
          ]);
        $entity = reset($menu_link_parents);
        if ($entity) {     
          $entity->set('link', $addcontent_url);
          $entity->save();         
        }
      }

      if(!empty($groups) && $groups[0]->bundle() == "country" && in_array('reviewer', $user_roles)) {           
        $users_list_url = 'internal:/users?gid='.$groups[0]->id();
        if($users_list_url)
        {
          $menu_link_users = \Drupal::entityTypeManager()
            ->getStorage('menu_link_content')
            ->loadByProperties([
              'title' => 'Users List',
              'menu_name' => 'editorial-menu',
            ]);
          $entitys = reset($menu_link_users);
          if ($entitys) {     
            $entitys->set('link', $users_list_url);
            $entitys->save();         
          }
        }
      }

      if(!empty($groups) && $groups[0]->bundle() == "country" && !in_array('administrator', $user_roles) && !in_array('global_admin', $user_roles)) {           
        $country_url = 'internal:/group-content-list?gid='.$groups[0]->id();        

        if($country_url){      
          $menu_link_country = \Drupal::entityTypeManager()
            ->getStorage('menu_link_content')
            ->loadByProperties([
              'title' => 'Country Content',
              'menu_name' => 'editorial-menu',
            ]);
          $entitys = reset($menu_link_country);
          if ($entitys) {     
            $entitys->set('link', $country_url);
            $entitys->save();         
          }
        }
      }
    }
}

function pb_custom_field_menu_local_tasks_alter(&$data, $route_name) {
  $roles = \Drupal::currentUser()->getRoles();
  if(in_array("reviewer", $roles) ){
    unset($data['tabs'][0]['devel.entities:group.devel_tab']);
    unset($data['tabs'][0]['group.view']);
    unset($data['tabs'][0]['group.edit_form']);
    unset($data['tabs'][0]['group.delete_form']);
    unset($data['tabs'][0]['group.content']);
    unset($data['tabs'][0]['views_view:view.group_nodes.page_1']);
    unset($data['tabs'][0]['views_view:view.duplicate_of_moderated_group_content.moderated_content']);
    unset($data['tabs'][0]['content_translation.local_tasks:entity.group.content_translation_overview']);
  }     
}

function user_update_function($form, FormStateInterface $form_state) {
  $currentUser = \Drupal::currentUser();
  $node = $form_state->getFormObject();
  $entity = $node->getEntity();
  $uid = $form_state->getValue('entity_id')[0]['target_id'];
  $user = \Drupal\user\Entity\User::load($uid);
  $roles = $user->getRoles();
  $group_roles = $form_state->getValue('group_roles');

  if(!empty($group_roles)){
    foreach ($roles as $role) {
      $user->removeRole($role);   
      $user->save();
    }

    foreach ($group_roles as $group_role) {
      if($group_role['target_id'] == "country-admin"){
        $new_role = "reviewer";      
      }else if($group_role['target_id'] == "country-sme"){     
        $new_role = "sme";
      }else if($group_role['target_id'] == "country-editor"){
        $new_role = "editor";
      }else if($group_role['target_id'] == "country-senior_editor"){
        $new_role = "se";
      }
      $user->addRole($new_role);    
      $user->save();
    }
  }
}

function group_user_validate($form, FormStateInterface $form_state){
  $uid = $form_state->getValue('entity_id')[0]['target_id'];
  $user = \Drupal\user\Entity\User::load($uid); 
  $groups = array();
  $grp_membership_service = \Drupal::service('group.membership_loader'); 
  
  $grps = $grp_membership_service->loadByUser($user);
  foreach ($grps as $grp) {
      $groups[] = $grp->getGroup();
  }

  if(empty($groups)){
    return true;
  }else{
    drupal_set_message(t('User already added in country.'), 'error');
    $form_state->setRebuild();
  }

}

function redirect_to_add_member_page($form, FormStateInterface $form_state) {

    $user = \Drupal::currentUser();
    $user_roles = $user->getRoles();
    $uid = $user->id();
    $groups = array();
    $grp_membership_service = \Drupal::service('group.membership_loader');
    $grps = $grp_membership_service->loadByUser($user);
    foreach ($grps as $grp) {
       $groups[] = $grp->getGroup();
    }
    $uids = $form_state->getValue('uid');
    if(!empty($groups) && $groups[0]->bundle() == "country" && in_array('reviewer', $user_roles)) {        
      $url = url::fromUserInput('/group/' . $groups[0]->id() . '/content/add/group_membership?uid='.$uids);     
      $form_state->setRedirectUrl($url);      
    }
}

/**
 * Implements hook_entity_operation_alter().
 */
function pb_custom_field_entity_operation_alter(array &$operations, EntityInterface $entity) {  
  $user_data = \Drupal::currentUser();
  $user_roles = $user_data->getRoles();  
  if($entity->getEntityTypeId() == "node" && \Drupal::service('path.current')->getPath() == "/group-content-list" && in_array('reviewer', $user_roles)) {
    if (isset($operations['edit'])) {
        unset($operations['edit']);      
    }

    if (isset($operations['delete'])) {
      unset($operations['delete']);      
    }
  }      
}