<?php

/**
 * @file
 * It contains custom field module.
 */

use Drupal\group\Entity\Group;
use Drupal\field\Entity\FieldStorageConfig;
use Drupal\Core\Entity\FieldableEntityInterface;
use Drupal\Core\Entity\ContentEntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Field\FieldStorageDefinitionInterface;
use Drupal\language\Entity\ConfigurableLanguage;
use Drupal\languagefield\Entity;
use Drupal\Core\Language\LanguageInterface;
use Drupal\Core\TypedData\OptionsProviderInterface;
use Drupal\Core\Language\LanguageManager;

/* 
 * Group Module - Country Type
 * Language Field - Multiselect Option Customization 
 */
function pb_custom_field_allowed_values_function(FieldStorageConfig $definition, ContentEntityInterface $entity = NULL, $cacheable) {
 $standard_languages = \Drupal::languageManager()->getLanguages();
 $options = [];
 foreach($standard_languages as $lkey=>$lval)
 {
    $options[$lkey] = t($lval->getName());
 }
  return $options;
}

function pb_custom_field_preprocess_page(&$variables) {
   $variables['#attached']['library'][] = 'pb_custom_field/mylib';
}

/*
 * Group Content List Page 
 * Country Field - dropdown option
 */
function pb_custom_field_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
if($form['#id'] == "views-exposed-form-content-listing-page-2")
  {
    $gids = \Drupal::entityQuery('group')->condition('type','country')->execute();
    $groups = \Drupal\group\Entity\Group::loadMultiple($gids);
    $options = ['' => 'All'];

    foreach($groups as $gid => $group) {
      $value = $group->get('label')->getString();
      $id = $group->get('id')->getString();

      if (isset($value)) {
        $options[$id] = $value;
      }
    }
    if (isset($form['gtitle'])) {
      $form['gtitle']['#type'] = 'select';
      $form['gtitle']['#options'] = $options;
      $form['gtitle']['#size'] = 1;
    }
  }
  
}

function user_update_func($form, \Drupal\Core\Form\FormStateInterface $form_state) {
  $currentUser = \Drupal::currentUser();
  $node = $form_state->getFormObject();
  $entity = $node->getEntity();
  $uid = $form_state->getValue('entity_id')[0]['target_id'];
  $user = \Drupal\user\Entity\User::load($uid);
  $roles = $user->getRoles();
  $group_roles = $form_state->getValue('group_roles');

  if(!empty($group_roles)){
    foreach ($roles as $role) {
      $user->removeRole($role);   
      $user->save();
    }

    foreach ($group_roles as $group_role) {
      if($group_role['target_id'] == "country-admin"){
        $new_role = "reviewer";      
      }else if($group_role['target_id'] == "country-sme"){     
        $new_role = "sme";
      }else if($group_role['target_id'] == "country-editor"){
        $new_role = "editor";
      }else if($group_role['target_id'] == "country-senior_editor"){
        $new_role = "se";
      }
      $user->addRole($new_role);    
      $user->save();
    }
  }
}

// function user_update_func($form, \Drupal\Core\Form\FormStateInterface $form_state) {
//   $currentUser = \Drupal::currentUser();
//   $node = $form_state->getFormObject();
//   $entity = $node->getEntity();
//   $uid = $form_state->getValue('entity_id')[0]['target_id'];
//   $user = \Drupal\user\Entity\User::load($uid);
//   $roles = $user->getRoles();
//   $group_roles = $form_state->getValue('group_roles');

//   if(!empty($group_roles)){
//     foreach ($roles as $role) {
//       $user->removeRole($role);   
//       $user->save();
//     }

//     foreach ($group_roles as $group_role) {
//       if($group_role['target_id'] == "country-admin"){
//         $new_role = "reviewer";      
//       }else if($group_role['target_id'] == "country-sme"){     
//         $new_role = "sme";
//       }else if($group_role['target_id'] == "country-editor"){
//         $new_role = "editor";
//       }else if($group_role['target_id'] == "country-senior_editor"){
//         $new_role = "se";
//       }
//       $user->addRole($new_role);    
//       $user->save();
//     }
//   }
// }

function pb_custom_field_link_alter(&$variables) {
    $user = \Drupal::currentUser();
    $user_roles = $user->getRoles();
    $uid = $user->id();
    $groups = array();
    $grp_membership_service = \Drupal::service('group.membership_loader');
    $grps = $grp_membership_service->loadByUser($user);
    foreach ($grps as $grp) {
            $groups[] = $grp->getGroup();
    }

    if(!empty($groups) && $groups[0]->bundle() == "country" && !in_array('administrator', $user_roles) && !in_array('global_admin', $user_roles)) {           
      $group_url = 'internal:/group/'.$groups[0]->id().'/members';
      $country_url = 'internal:/group-content-list/'.$groups[0]->id();

      if($group_url){
        $menu_link_parents = \Drupal::entityTypeManager()
          ->getStorage('menu_link_content')
          ->loadByProperties([
            'title' => 'Assign Users',
            'menu_name' => 'editorial-menu',
          ]);
        $entity = reset($menu_link_parents);
        if ($entity) {     
          $entity->set('link', $group_url);
          $entity->save();         
        }
      }

      if($country_url){      
        $menu_link_country = \Drupal::entityTypeManager()
          ->getStorage('menu_link_content')
          ->loadByProperties([
            'title' => 'Country Content',
            'menu_name' => 'editorial-menu',
          ]);
        $entitys = reset($menu_link_country);
        if ($entitys) {     
          $entitys->set('link', $country_url);
          $entitys->save();         
        }
      }
    }

    if(!empty($groups) && $groups[0]->bundle() == "country" && !in_array('administrator', $user_roles) && !in_array('global_admin', $user_roles)) {           
      $addcontent_url = 'internal:/group/'.$groups[0]->id() .'/node/create';
      if($addcontent_url){
        $menu_link_parents = \Drupal::entityTypeManager()
          ->getStorage('menu_link_content')
          ->loadByProperties([
            'title' => 'Add Content',
            'menu_name' => 'editorial-menu',
          ]);
        $entity = reset($menu_link_parents);
        if ($entity) {     
          $entity->set('link', $addcontent_url);
          $entity->save();         
        }
      }
    }
}

// function user_update_func($form, \Drupal\Core\Form\FormStateInterface $form_state) {
//   $currentUser = \Drupal::currentUser();
//   $node = $form_state->getFormObject();
//   $entity = $node->getEntity();
//   $uid = $form_state->getValue('entity_id')[0]['target_id'];
//   $user = \Drupal\user\Entity\User::load($uid);
//   $roles = $user->getRoles();
//   $group_roles = $form_state->getValue('group_roles');

//   if(!empty($group_roles)){
//     foreach ($roles as $role) {
//       $user->removeRole($role);   
//       $user->save();
//     }

//     foreach ($group_roles as $group_role) {
//       if($group_role['target_id'] == "country-admin"){
//         $new_role = "reviewer";      
//       }else if($group_role['target_id'] == "country-sme"){     
//         $new_role = "sme";
//       }else if($group_role['target_id'] == "country-editor"){
//         $new_role = "editor";
//       }else if($group_role['target_id'] == "country-senior_editor"){
//         $new_role = "se";
//       }
//       $user->addRole($new_role);    
//       $user->save();
//     }
//   }
// }



